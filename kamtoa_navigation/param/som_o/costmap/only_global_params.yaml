max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.21  # distance a circular robot should be clear of the obstacle (hanaman: 0.30)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

map_type: voxel

# sonar_layer:
#   topics: ['/maxbotix_i2c/S0_range', '/maxbotix_i2c/S1_range', '/maxbotix_i2c/S2_range', '/maxbotix_i2c/S3_range', '/maxbotix_i2c/S4_range', '/maxbotix_i2c/S5_range', '/maxbotix_i2c/S6_range', '/maxbotix_i2c/S7_range']
#   clear_on_max_reading: true

obstacle_layer:
  enabled:              true
  max_obstacle_height:  0.6
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             2
  unknown_threshold:    15
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  origin_z: 0.0
  z_resolution: 0.2
  z_voxels: 2
  publish_voxel_map: false
  observation_sources:  scan #scan_filtered #bump
  scan:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    min_obstacle_height: 0.1
    max_obstacle_height: 2.0
  #bump:
    #data_type: PointCloud2
    #topic: mobile_base/sensors/bumper_pointcloud
    #marking: true
    #clearing: false
    #min_obstacle_height: 0.0
    #max_obstacle_height: 0.15
  # for debugging only, let's you see the entire voxel grid

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.30 #tn0.50  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true
